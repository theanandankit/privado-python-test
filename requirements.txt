# Example requirements.txt demonstrating metadata extraction issues
# These are real-world scenarios where package names are found but metadata might be missing
# Issue 1: Case sensitivity - pip normalizes to lowercase but search is case-sensitive
Django==3.2.0
Flask-Login==0.5.0
BeautifulSoup4>=4.9.0
# Issue 2: Complex version specifiers with brackets
# getPackageName() splits on '[' so "requests" is extracted, but line has more
requests[security,socks]>=2.28.0,<3.0.0
cryptography[ssh]~=38.0.0
Django[argon2]==3.2.0
# Issue 3: Git-based dependencies
# Package name extraction from git URLs is complex
git+https://github.com/django/django.git@stable/3.2.x#egg=Django
git+ssh://git@github.com/pyca/cryptography.git@main#egg=cryptography
git+https://github.com/psf/requests.git@v2.28.0#egg=requests
# Issue 4: Local file dependencies
# Package name from file paths is hard to extract
file:///local/packages/my-crypto-lib-1.0.tar.gz
./vendor/internal-security-tools-2.1.0.whl
../shared/company-auth-module/
# Issue 5: URL-based dependencies
# Direct URLs make package name extraction difficult
https://files.pythonhosted.org/packages/source/c/cryptography/cryptography-38.0.0.tar.gz
https://github.com/pallets/flask/archive/2.2.2.zip
# Issue 6: Environment markers and platform specifications
# Complex conditionals might interfere with line matching
pywin32==301; sys_platform == 'win32'
pycryptodome>=3.15.0; platform_machine != 'i386'
tensorflow>=2.10.0; python_version >= '3.8'
# Issue 7: Unusual spacing and formatting
# Extra spaces might cause substring matching to fail
numpy    ==    1.21.0
pandas   >=1.3.0,   <2.0.0
scikit-learn  ~=  1.0.0
# Issue 8: Inline comments
# Comments might interfere with line matching
requests==2.28.0  # HTTP library [SECURITY CRITICAL]
cryptography==38.0.4  # Latest stable (CVE-2022-XXXX fixed)
pycryptodome==3.15.0    # AES, RSA, etc.
# Issue 9: Multiple constraints on one line
# Invalid format but sometimes seen, only first package extracted
requests>=2.25.0,<3.0.0; urllib3>=1.26.0,<2.0.0
# Issue 10: Packages with dots and hyphens
# Complex package names might be transformed incorrectly
backports.functools-lru-cache==1.6.4
google-cloud-storage==2.5.0
azure-storage-blob>=12.14.0
# Issue 11: Pre-release and local version identifiers
# Special version formats might cause issues
selenium==4.0.0rc1
numpy==1.21.0+cpu
torch==1.12.0+cu116
# Issue 12: Editable installs (would be in separate file usually)
# -e flag makes extraction complex
-e git+https://github.com/company/private-lib.git@develop#egg=private-lib
-e ./local/development/package/
# Real encryption packages that should be caught by the regex
cryptography==38.0.4
pycryptodome==3.15.0
PyNaCl==1.5.0
bcrypt==4.0.1
argon2-cffi==21.3.0
pyOpenSSL==22.1.0
# These might have metadata issues due to case/format
Cryptography==38.0.4  # Wrong case
PyCryptoDome==3.15.0  # Wrong case
py-nacl==1.5.0  # Different formatting
